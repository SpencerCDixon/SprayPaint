// flexible grid functions modified from Bourbon by thoughtbot, inc ============================== /
// http://thoughtbot.com/bourbon/#flex-grid ====================================================== /

@function columns($columns, $parent: $max-columns) {
  $width: $columns * $column-width + ($columns - 1) * $gutter;
  $parent-width: $parent * $column-width + ($parent - 1) * $gutter;
  @return percentage($width / $parent-width);
}

@function gutter($parent: $max-columns) {
  $parent-width: $parent * $column-width + ($parent - 1) * $gutter;
  @return percentage($gutter / $parent-width);
}

// row mixin includes clearfix hack, last-child margin fix and any global row styles ============= /
@mixin row {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  @include clearfix;
  @include nesting;
}

// target nested elements with grid styles. use in global styles as well as row mixin ============ /
@mixin nesting($children: div) {
  padding: 0; // remove padding from parent container so floated columns can fill it

  & > #{$children} { // target only child elements of the container
    float: left;
    margin-right: gutter();
    @include border-box;
  }
}

// calculate offset amounts for offset columns =================================================== /
@function offset-columns($columns) {
  $margin: $columns * $column-width + $columns * $gutter;
  @return $margin;
}

@mixin offset($from-direction, $columns) {
  @if $from-direction == left {
    float: left;
    margin-left: offset-columns($columns);
  }
  @if $from-direction == right {
    float: right;
    margin-right: offset-columns($columns);
  }
}

// remove margin-right from last element in a row or container so all columns fit ================ /
@mixin last {
  margin-right: 0 !important;
  float: right !important; // fixes poor alignment with right edge caused by percentage calculations
}


.row {
  margin-bottom: $vertical-measure;
  @include row
}
.col-1 {
  width: columns(1);
  margin-bottom: $vertical-measure;
}
.col-2 {
  width: columns(2);
  margin-bottom: $vertical-measure;
}
.col-3 {
  width: columns(3);
  margin-bottom: $vertical-measure;
}
.col-4 {
  width: columns(4);
  margin-bottom: $vertical-measure;
}
.col-5 {
  width: columns(5);
  margin-bottom: $vertical-measure;
}
.col-6 {
  width: columns(6);
  margin-bottom: $vertical-measure;
}
.last {
  @include last
}

.bg {
  text-align: center;
  color: #fff;
  background-color: $default
}
